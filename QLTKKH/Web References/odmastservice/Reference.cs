//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace QLTKKH.odmastservice {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="_ODMASTWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class _ODMASTWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ThemODMASTOperationCompleted;
        
        private System.Threading.SendOrPostCallback HuyODMASTOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_ODMASTOperationCompleted;
        
        private System.Threading.SendOrPostCallback ThanhToanOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public _ODMASTWebService() {
            this.Url = global::QLTKKH.Properties.Settings.Default.QLTKKH_odmastservice__ODMASTWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ThemODMASTCompletedEventHandler ThemODMASTCompleted;
        
        /// <remarks/>
        public event HuyODMASTCompletedEventHandler HuyODMASTCompleted;
        
        /// <remarks/>
        public event Update_ODMASTCompletedEventHandler Update_ODMASTCompleted;
        
        /// <remarks/>
        public event ThanhToanCompletedEventHandler ThanhToanCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ThemODMAST", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ThemODMAST(string custid, string afacctno, string orderid, System.DateTime lastchange, string exectype, string codeid, string symbol, long orderqtty, long quoteprice, long execqtty, long execamt, long remainqtty, long cancelqtty, double bratio, char edstatus) {
            this.Invoke("ThemODMAST", new object[] {
                        custid,
                        afacctno,
                        orderid,
                        lastchange,
                        exectype,
                        codeid,
                        symbol,
                        orderqtty,
                        quoteprice,
                        execqtty,
                        execamt,
                        remainqtty,
                        cancelqtty,
                        bratio,
                        edstatus});
        }
        
        /// <remarks/>
        public void ThemODMASTAsync(string custid, string afacctno, string orderid, System.DateTime lastchange, string exectype, string codeid, string symbol, long orderqtty, long quoteprice, long execqtty, long execamt, long remainqtty, long cancelqtty, double bratio, char edstatus) {
            this.ThemODMASTAsync(custid, afacctno, orderid, lastchange, exectype, codeid, symbol, orderqtty, quoteprice, execqtty, execamt, remainqtty, cancelqtty, bratio, edstatus, null);
        }
        
        /// <remarks/>
        public void ThemODMASTAsync(
                    string custid, 
                    string afacctno, 
                    string orderid, 
                    System.DateTime lastchange, 
                    string exectype, 
                    string codeid, 
                    string symbol, 
                    long orderqtty, 
                    long quoteprice, 
                    long execqtty, 
                    long execamt, 
                    long remainqtty, 
                    long cancelqtty, 
                    double bratio, 
                    char edstatus, 
                    object userState) {
            if ((this.ThemODMASTOperationCompleted == null)) {
                this.ThemODMASTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThemODMASTOperationCompleted);
            }
            this.InvokeAsync("ThemODMAST", new object[] {
                        custid,
                        afacctno,
                        orderid,
                        lastchange,
                        exectype,
                        codeid,
                        symbol,
                        orderqtty,
                        quoteprice,
                        execqtty,
                        execamt,
                        remainqtty,
                        cancelqtty,
                        bratio,
                        edstatus}, this.ThemODMASTOperationCompleted, userState);
        }
        
        private void OnThemODMASTOperationCompleted(object arg) {
            if ((this.ThemODMASTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ThemODMASTCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HuyODMAST", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HuyODMAST(string orderid) {
            this.Invoke("HuyODMAST", new object[] {
                        orderid});
        }
        
        /// <remarks/>
        public void HuyODMASTAsync(string orderid) {
            this.HuyODMASTAsync(orderid, null);
        }
        
        /// <remarks/>
        public void HuyODMASTAsync(string orderid, object userState) {
            if ((this.HuyODMASTOperationCompleted == null)) {
                this.HuyODMASTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHuyODMASTOperationCompleted);
            }
            this.InvokeAsync("HuyODMAST", new object[] {
                        orderid}, this.HuyODMASTOperationCompleted, userState);
        }
        
        private void OnHuyODMASTOperationCompleted(object arg) {
            if ((this.HuyODMASTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HuyODMASTCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_ODMAST", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_ODMAST(string custid, string orderid, string exectype, string symbol, long orderqtty, long quoteprice, long execqtty, long execamt, long remainqtty) {
            this.Invoke("Update_ODMAST", new object[] {
                        custid,
                        orderid,
                        exectype,
                        symbol,
                        orderqtty,
                        quoteprice,
                        execqtty,
                        execamt,
                        remainqtty});
        }
        
        /// <remarks/>
        public void Update_ODMASTAsync(string custid, string orderid, string exectype, string symbol, long orderqtty, long quoteprice, long execqtty, long execamt, long remainqtty) {
            this.Update_ODMASTAsync(custid, orderid, exectype, symbol, orderqtty, quoteprice, execqtty, execamt, remainqtty, null);
        }
        
        /// <remarks/>
        public void Update_ODMASTAsync(string custid, string orderid, string exectype, string symbol, long orderqtty, long quoteprice, long execqtty, long execamt, long remainqtty, object userState) {
            if ((this.Update_ODMASTOperationCompleted == null)) {
                this.Update_ODMASTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_ODMASTOperationCompleted);
            }
            this.InvokeAsync("Update_ODMAST", new object[] {
                        custid,
                        orderid,
                        exectype,
                        symbol,
                        orderqtty,
                        quoteprice,
                        execqtty,
                        execamt,
                        remainqtty}, this.Update_ODMASTOperationCompleted, userState);
        }
        
        private void OnUpdate_ODMASTOperationCompleted(object arg) {
            if ((this.Update_ODMASTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_ODMASTCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ThanhToan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ThanhToan() {
            this.Invoke("ThanhToan", new object[0]);
        }
        
        /// <remarks/>
        public void ThanhToanAsync() {
            this.ThanhToanAsync(null);
        }
        
        /// <remarks/>
        public void ThanhToanAsync(object userState) {
            if ((this.ThanhToanOperationCompleted == null)) {
                this.ThanhToanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThanhToanOperationCompleted);
            }
            this.InvokeAsync("ThanhToan", new object[0], this.ThanhToanOperationCompleted, userState);
        }
        
        private void OnThanhToanOperationCompleted(object arg) {
            if ((this.ThanhToanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ThanhToanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ThemODMASTCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void HuyODMASTCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Update_ODMASTCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ThanhToanCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591