//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace QLTKKH.cfmastservice {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CFMASTWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CFMASTWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReadProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuaThemTienCIMASTOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuaTruTienCIMASTOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback FixCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCustomerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CFMASTWebService() {
            this.Url = global::QLTKKH.Properties.Settings.Default.QLTKKH_cfmastservice_CFMASTWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReadProcCompletedEventHandler ReadProcCompleted;
        
        /// <remarks/>
        public event SuaThemTienCIMASTCompletedEventHandler SuaThemTienCIMASTCompleted;
        
        /// <remarks/>
        public event SuaTruTienCIMASTCompletedEventHandler SuaTruTienCIMASTCompleted;
        
        /// <remarks/>
        public event AddCustomerCompletedEventHandler AddCustomerCompleted;
        
        /// <remarks/>
        public event FixCustomerCompletedEventHandler FixCustomerCompleted;
        
        /// <remarks/>
        public event DeleteCustomerCompletedEventHandler DeleteCustomerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReadProc(string custid, string acctno, string martype, int mrcrlimitmax, string afacctno, int balance, System.DateTime lastchange) {
            this.Invoke("ReadProc", new object[] {
                        custid,
                        acctno,
                        martype,
                        mrcrlimitmax,
                        afacctno,
                        balance,
                        lastchange});
        }
        
        /// <remarks/>
        public void ReadProcAsync(string custid, string acctno, string martype, int mrcrlimitmax, string afacctno, int balance, System.DateTime lastchange) {
            this.ReadProcAsync(custid, acctno, martype, mrcrlimitmax, afacctno, balance, lastchange, null);
        }
        
        /// <remarks/>
        public void ReadProcAsync(string custid, string acctno, string martype, int mrcrlimitmax, string afacctno, int balance, System.DateTime lastchange, object userState) {
            if ((this.ReadProcOperationCompleted == null)) {
                this.ReadProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadProcOperationCompleted);
            }
            this.InvokeAsync("ReadProc", new object[] {
                        custid,
                        acctno,
                        martype,
                        mrcrlimitmax,
                        afacctno,
                        balance,
                        lastchange}, this.ReadProcOperationCompleted, userState);
        }
        
        private void OnReadProcOperationCompleted(object arg) {
            if ((this.ReadProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadProcCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuaThemTienCIMAST", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SuaThemTienCIMAST(string afacctno, string acctno, int money, System.DateTime lastchange) {
            this.Invoke("SuaThemTienCIMAST", new object[] {
                        afacctno,
                        acctno,
                        money,
                        lastchange});
        }
        
        /// <remarks/>
        public void SuaThemTienCIMASTAsync(string afacctno, string acctno, int money, System.DateTime lastchange) {
            this.SuaThemTienCIMASTAsync(afacctno, acctno, money, lastchange, null);
        }
        
        /// <remarks/>
        public void SuaThemTienCIMASTAsync(string afacctno, string acctno, int money, System.DateTime lastchange, object userState) {
            if ((this.SuaThemTienCIMASTOperationCompleted == null)) {
                this.SuaThemTienCIMASTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuaThemTienCIMASTOperationCompleted);
            }
            this.InvokeAsync("SuaThemTienCIMAST", new object[] {
                        afacctno,
                        acctno,
                        money,
                        lastchange}, this.SuaThemTienCIMASTOperationCompleted, userState);
        }
        
        private void OnSuaThemTienCIMASTOperationCompleted(object arg) {
            if ((this.SuaThemTienCIMASTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuaThemTienCIMASTCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuaTruTienCIMAST", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SuaTruTienCIMAST(string afacctno, string acctno, int money, System.DateTime lastchange) {
            this.Invoke("SuaTruTienCIMAST", new object[] {
                        afacctno,
                        acctno,
                        money,
                        lastchange});
        }
        
        /// <remarks/>
        public void SuaTruTienCIMASTAsync(string afacctno, string acctno, int money, System.DateTime lastchange) {
            this.SuaTruTienCIMASTAsync(afacctno, acctno, money, lastchange, null);
        }
        
        /// <remarks/>
        public void SuaTruTienCIMASTAsync(string afacctno, string acctno, int money, System.DateTime lastchange, object userState) {
            if ((this.SuaTruTienCIMASTOperationCompleted == null)) {
                this.SuaTruTienCIMASTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuaTruTienCIMASTOperationCompleted);
            }
            this.InvokeAsync("SuaTruTienCIMAST", new object[] {
                        afacctno,
                        acctno,
                        money,
                        lastchange}, this.SuaTruTienCIMASTOperationCompleted, userState);
        }
        
        private void OnSuaTruTienCIMASTOperationCompleted(object arg) {
            if ((this.SuaTruTienCIMASTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuaTruTienCIMASTCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddCustomer(string makh, string ten, string soluuky, string loaigiay, string sogiay, string ngaycap, string diachi, string dienthoai, string somobile, string email) {
            this.Invoke("AddCustomer", new object[] {
                        makh,
                        ten,
                        soluuky,
                        loaigiay,
                        sogiay,
                        ngaycap,
                        diachi,
                        dienthoai,
                        somobile,
                        email});
        }
        
        /// <remarks/>
        public void AddCustomerAsync(string makh, string ten, string soluuky, string loaigiay, string sogiay, string ngaycap, string diachi, string dienthoai, string somobile, string email) {
            this.AddCustomerAsync(makh, ten, soluuky, loaigiay, sogiay, ngaycap, diachi, dienthoai, somobile, email, null);
        }
        
        /// <remarks/>
        public void AddCustomerAsync(string makh, string ten, string soluuky, string loaigiay, string sogiay, string ngaycap, string diachi, string dienthoai, string somobile, string email, object userState) {
            if ((this.AddCustomerOperationCompleted == null)) {
                this.AddCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCustomerOperationCompleted);
            }
            this.InvokeAsync("AddCustomer", new object[] {
                        makh,
                        ten,
                        soluuky,
                        loaigiay,
                        sogiay,
                        ngaycap,
                        diachi,
                        dienthoai,
                        somobile,
                        email}, this.AddCustomerOperationCompleted, userState);
        }
        
        private void OnAddCustomerOperationCompleted(object arg) {
            if ((this.AddCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FixCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FixCustomer(string makh, string ten, string soluuky, string loaigiay, string sogiay, string ngaycap, string diachi, string dienthoai, string somobile, string email) {
            this.Invoke("FixCustomer", new object[] {
                        makh,
                        ten,
                        soluuky,
                        loaigiay,
                        sogiay,
                        ngaycap,
                        diachi,
                        dienthoai,
                        somobile,
                        email});
        }
        
        /// <remarks/>
        public void FixCustomerAsync(string makh, string ten, string soluuky, string loaigiay, string sogiay, string ngaycap, string diachi, string dienthoai, string somobile, string email) {
            this.FixCustomerAsync(makh, ten, soluuky, loaigiay, sogiay, ngaycap, diachi, dienthoai, somobile, email, null);
        }
        
        /// <remarks/>
        public void FixCustomerAsync(string makh, string ten, string soluuky, string loaigiay, string sogiay, string ngaycap, string diachi, string dienthoai, string somobile, string email, object userState) {
            if ((this.FixCustomerOperationCompleted == null)) {
                this.FixCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFixCustomerOperationCompleted);
            }
            this.InvokeAsync("FixCustomer", new object[] {
                        makh,
                        ten,
                        soluuky,
                        loaigiay,
                        sogiay,
                        ngaycap,
                        diachi,
                        dienthoai,
                        somobile,
                        email}, this.FixCustomerOperationCompleted, userState);
        }
        
        private void OnFixCustomerOperationCompleted(object arg) {
            if ((this.FixCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FixCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCustomer(string MaKh) {
            this.Invoke("DeleteCustomer", new object[] {
                        MaKh});
        }
        
        /// <remarks/>
        public void DeleteCustomerAsync(string MaKh) {
            this.DeleteCustomerAsync(MaKh, null);
        }
        
        /// <remarks/>
        public void DeleteCustomerAsync(string MaKh, object userState) {
            if ((this.DeleteCustomerOperationCompleted == null)) {
                this.DeleteCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCustomerOperationCompleted);
            }
            this.InvokeAsync("DeleteCustomer", new object[] {
                        MaKh}, this.DeleteCustomerOperationCompleted, userState);
        }
        
        private void OnDeleteCustomerOperationCompleted(object arg) {
            if ((this.DeleteCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReadProcCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SuaThemTienCIMASTCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SuaTruTienCIMASTCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FixCustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591